---
version: 3

vars:
  # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
  PROMETHEUS_OPERATOR_VERSION: v0.71.2
  CLUSTER_SETTINGS_FILE: "{{.K8S_DIR}}/flux/vars/cluster-settings.yaml"
  CLUSTER_SECRET_SOPS_FILE: "{{.K8S_DIR}}/flux/vars/cluster-secrets.sops.yaml"

tasks:
  bootstrap:
    desc: Bootstrap Prometheus + Flux
    cmds:
      - task: bootstrap-prometheus-crd
      - task: bootstrap-flux

  bootstrap-prometheus-crd:
    desc: Load Prometheus CRDs
    cmds:
      - kubectl apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
      - kubectl apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
      - kubectl apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_scrapeconfigs.yaml
      - kubectl apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }

  bootstrap-flux:
    desc: Bootstrap Flux into the cluster
    cmds:
      - kubectl apply --server-side --kustomize {{.K8S_DIR}}/flux/bootstrap
      - cat {{.AGE_FILE}} | kubectl --namespace flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin
      - sops --decrypt {{.CLUSTER_SECRET_SOPS_FILE}} | kubectl apply --server-side --filename -
      - kubectl apply --server-side --filename {{.CLUSTER_SETTINGS_FILE}}
      - kubectl apply --server-side --kustomize {{.K8S_DIR}}/flux/config
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.AGE_FILE}}" }

  apply:
    desc: Apply a Flux Kustomization resource for a cluster
    summary: |
      Args:
        path: Path under apps containing the Flux Kustomization resource (ks.yaml) (required)
        ns: Namespace the Flux Kustomization exists in (default: flux-system)
    cmd: |
      flux build ks $(basename {{.path}}) \
          --namespace {{.ns}} \
          --kustomization-file {{.K8S_DIR}}/apps/{{.path}}/ks.yaml \
          --path {{.K8S_DIR}}/apps/{{.path}} \
          {{- if contains "not found" .ks }}--dry-run \{{ end }}
      | \
      kubectl apply --server-side \
          --field-manager=kustomize-controller -f -
    requires:
      vars: ["path"]
    vars:
      ns: '{{.ns | default "flux-system"}}'
      ks:
        sh: flux --namespace {{.ns}} get kustomizations $(basename {{.path}}) 2>&1
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }
      - { msg: "Missing Flux Kustomization for app {{.path}}", sh: "test -f {{.K8S_DIR}}/apps/{{.path}}/ks.yaml" }

  reconcile:
    desc: Force update Flux to pull in changes from your git
    cmd: flux reconcile --namespace flux-system kustomization cluster --with-source
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }

