---
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Configure hosts file
  ansible.builtin.copy:
    dest: /etc/hosts
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true
    content: |
      127.0.0.1 localhost {{ inventory_hostname }} localhost.dorn.haus {{ inventory_hostname }}.dorn.haus
      ::1       localhost {{ inventory_hostname }} localhost.dorn.haus {{ inventory_hostname }}.dorn.haus

- name: Configure network interfaces
  when: ansible_facts["os_family"]|lower == "alpine"
  vars:
    ipv4:
      addr: "{{ ansible_host }}/16"
      gateway: 192.168.1.1
      nameservers:
      - 1.0.0.1
      - 1.1.1.1
      - 8.8.4.4
      - 8.8.8.8
    ipv6:
      addr: "{{ eui64_addr }}/64"
      gateway: fe80::924d:4aff:fecc:ef8b
      nameservers:
      - 2001:4860:4860::8844
      - 2001:4860:4860::8888
      - 2606:4700:4700::1001
      - 2606:4700:4700::1111
  ansible.builtin.template:
    src: etc/network/interfaces.j2
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true

- name: Install Tailscale
  when: ansible_facts["os_family"]|lower == "alpine"
  community.general.apk:
    name: tailscale
    update_cache: true

- name: Start Tailscale service
  ansible.builtin.service:
    name: tailscale
    state: started
    enabled: true

- name: Check Tailscale status
  ansible.builtin.command:
    argv:
    - tailscale
    - status
    - --peers=false
    - --self
    - --json
  register: tailscale_status
  changed_when: false

- name: Join Tailscale network if needed
  vars:
    all_args:
    - tailscale
    - up
    - --authkey={{ secrets.tailscale.ephemeral_key.secret }}
    - --hostname={{ inventory_hostname }}
    jumphost_args:
    - --advertise-routes=fd10:8::/64,192.168.8.0/24
    - --accept-routes=false
    - --ssh
  ansible.builtin.command:
    argv: "{{ all_args + (jumphost_args if jumphost else []) }}"
  when: not (tailscale_status.stdout|ansible.builtin.from_json).Self.Online

- name: Configure IPv4/IPv6 forwarding
  when: jumphost
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
  loop:
  - net.ipv4.ip_forward
  - net.ipv6.conf.all.forwarding
