#!/usr/sbin/nft -f
# vim: set ts=4 sw=4:

# Clear all prior state
flush ruleset

# Basic IPv4/IPv6 stateful firewall
table inet filter {
    chain input {
        type filter hook input priority 0; policy accept;

        ct state invalid drop \
        comment "Drop invalid connections"

        tcp dport 113 reject with icmpx type port-unreachable \
        comment "Reject AUTH to make it fail fast"
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
    }

    chain output {
        type filter hook output priority 0; policy accept;
    }
}

table ip nat {
    chain prerouting {
        type nat hook prerouting priority dstnat; policy accept;

        ip daddr 127.0.0.1 tcp \
        dport {{ cluster.kubernetes_api.proxy_port }} \
        dnat to {{ cluster.kubernetes_api.ipv4 }}:{{ cluster.kubernetes_api.port }} \
        comment "DNAT for local traffic (localhost -> kubernetes)"
    }

    chain postrouting {
        type nat hook postrouting priority srcnat; policy accept;

        ip saddr 127.0.0.1 masquerade
    }

    chain output {
        type nat hook output priority dstnat; policy accept;

        ip daddr 127.0.0.1 tcp \
        dport {{ cluster.kubernetes_api.proxy_port }} \
        dnat to {{ cluster.kubernetes_api.ipv4 }}:{{ cluster.kubernetes_api.port }} \
        comment "DNAT for local traffic (localhost -> kubernetes)"
    }
}

table ip filter {
    chain input {
        type filter hook input priority filter; policy accept;

        ip daddr {{ cluster.kubernetes_api.ipv4 }} tcp dport {{ cluster.kubernetes_api.port }} accept \
        comment "Allow DNAT'd incoming traffic to kubernetes"
    }

    chain output {
        type filter hook output priority filter; policy accept;

        ip daddr {{ cluster.kubernetes_api.ipv4 }} tcp dport {{ cluster.kubernetes_api.port }} accept \
        comment "Allow outgoing traffic to kubernetes"
    }
}

# Don't include stateful objects
# include "/var/lib/nftables/*.nft"

# Rules
include "/etc/nftables.d/*.nft"
