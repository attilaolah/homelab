---
name: Build & Check

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  build:
    name: Flux Manifests
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        install_url: https://nixos.org/nix/install
        extra_nix_config: |
          auto-optimise-store = true
          experimental-features = nix-command flakes

    - name: Check Nix flake
      run: nix flake check --impure

    - name: Build manifests archive
      id: build
      run: |
        echo -n artifact_dir= >> "$GITHUB_OUTPUT"
        nix build --print-out-paths | tee -a "$GITHUB_OUTPUT"

    - name: Detect artifact version
      id: ghd
      uses: proudust/gh-describe@v2

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: manifests-${{ steps.ghd.outputs.describe }}
        path: ${{ steps.build.outputs.artifact_dir }}
        if-no-files-found: error
        compression-level: 9
        retention-days: 8

  sonarqube:
    name: SonarQube scan
    runs-on: ubuntu-24.04
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        # Shallow clones should be disabled for a better relevancy of analysis.
        fetch-depth: 0

    - name: Download manifests archive
      uses: actions/download-artifact@v4

    # - name: Detect artifact dir and version
    #   id: artifact
    #   run: |
    #     dir="$(ls -1d manifests-*)"
    #     echo "version=${dir/manifests-/}" >> "$GITHUB_OUTPUT"

    - name: Extract manifests from archive
      run: |
        cp -rf manifests-*/* manifests
        rm -rf manifests-*

    - name: Run SonarQube scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # with:
      #   args: >
      #     -Dsonar.projectVersion=${{ steps.artifact.outputs.version }}
