---
name: Build and Deploy

on:
  push:
    branches:
    - main
  workflow_dispatch:

env:
  OCI_REPO: oci://ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build:
    name: Build Flux manifests
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2

    - name: Install Nix
      uses: cachix/install-nix-action@fc6e360bedc9ee72d75e701397f0bb30dce77568 # v31.5.2
      with:
        install_url: https://nixos.org/nix/install
        extra_nix_config: |
          auto-optimise-store = true
          experimental-features = nix-command flakes

    - name: Detect version
      id: ghd
      uses: proudust/gh-describe@v2.1.0

    - name: Write version to version.txt file
      run: |
        echo "${{ steps.ghd.outputs.describe }}" > version.txt

    - name: Upload version artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: version
        path: version.txt
        if-no-files-found: error
        compression-level: 0
        retention-days: 2

    - name: Build manifests archive
      id: build
      run: |
        echo -n artifact_dir= >> "$GITHUB_OUTPUT"
        nix build --print-out-paths | tee -a "$GITHUB_OUTPUT"

    - name: Upload manifests artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: manifests
        path: ${{ steps.build.outputs.artifact_dir }}
        if-no-files-found: error
        compression-level: 9
        retention-days: 2

  deploy:
    name: Production
    environment: prod
    needs: build
    runs-on: ubuntu-24.04

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v5.0.0

    - name: Detect artifact dir and version
      id: artifact
      run: |
        echo "version=$(cat version/version.txt)" >> "$GITHUB_OUTPUT"

    - name: Install Flux
      uses: fluxcd/flux2/action@main

    - name: Sign in to GitHub container registry
      uses: docker/login-action@v3.5.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        # Token is set explicitly for the prod environment only.
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Push Kubernetes manifests
      run: |
        flux push artifact "$OCI_REPO:${{ steps.artifact.outputs.version }}" \
          --path=manifests \
          --source="${{ github.repositoryUrl }}" \
          --revision="${{ github.ref_name }}@sha1:${{ github.sha }}" \
          --reproducible

    - name: Deploy Kubernetes manifests to prod
      run: |
        flux tag artifact "$OCI_REPO:${{ steps.artifact.outputs.version }}" --tag latest
